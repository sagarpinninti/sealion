"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TableCard = exports.TableCardSettings = exports.LinklistCard = exports.LinkListCardSettings = exports.StackCard = exports.StackCardSettings = exports.AnalyticalCard = exports.AnalyticalCardSettingsv4 = exports.AnalyticalCardSettings = exports.ListCard = exports.ListCardSettings = exports.CustomCard = exports.CommonCardSettings = exports.DefaultSpanObject = exports.ChartSettingsType = exports.exportDefaultSpan = void 0;
const decorators_1 = require("../../../common/decoration/decorators");
const application_1 = require("../../application");
function exportDefaultSpan(manifestSection, configPart, key) {
    const value = configPart[key];
    if (value === 'auto') {
        manifestSection[key] = value;
    } // else = object properties, handled by own sync rules
}
exports.exportDefaultSpan = exportDefaultSpan;
class ChartSettingsType {
}
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: () => (0, application_1.getOVPsettingPath)() + '/chartSettings'
        }
    })
], ChartSettingsType.prototype, "showDataLabel", void 0);
exports.ChartSettingsType = ChartSettingsType;
class DefaultSpanObject {
}
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], DefaultSpanObject.prototype, "cols", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], DefaultSpanObject.prototype, "rows", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], DefaultSpanObject.prototype, "showOnlyHeader", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], DefaultSpanObject.prototype, "minimumTitleRow", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], DefaultSpanObject.prototype, "minimumSubTitleRow", void 0);
exports.DefaultSpanObject = DefaultSpanObject;
class CommonCardSettings {
}
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "entitySet", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "title", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "subTitle", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "annotationPath", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "dataPointAnnotationPath", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "selectionPresentationAnnotationPath", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "kpiAnnotationPath", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "category", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "dynamicSubtitleAnnotationPath", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "valueSelectionInfo", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "showFilterInHeader", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "sortBy", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "sortOrder", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "identificationAnnotationPath", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "selectionAnnotationPath", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "presentationAnnotationPath", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "enableLocaleCurrencyFormatting", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys),
            export: exportDefaultSpan
        }
    })
], CommonCardSettings.prototype, "defaultSpan", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "requireAppAuthorization", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "showSortingInHeader", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "tabs", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "addODataSelect", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "showRefresh", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CommonCardSettings.prototype, "customParams", void 0);
exports.CommonCardSettings = CommonCardSettings;
class CustomCard {
}
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CustomCard.prototype, "model", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CustomCard.prototype, "template", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], CustomCard.prototype, "settings", void 0);
exports.CustomCard = CustomCard;
class ListCardSettings extends CommonCardSettings {
}
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], ListCardSettings.prototype, "showLineItemDetail", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], ListCardSettings.prototype, "imageSupported", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], ListCardSettings.prototype, "enableAddToInsights", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], ListCardSettings.prototype, "listFlavor", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], ListCardSettings.prototype, "listType", void 0);
exports.ListCardSettings = ListCardSettings;
class ListCard {
}
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], ListCard.prototype, "model", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], ListCard.prototype, "template", void 0);
exports.ListCard = ListCard;
class AnalyticalCardSettings extends CommonCardSettings {
}
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], AnalyticalCardSettings.prototype, "chartAnnotationPath", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], AnalyticalCardSettings.prototype, "ignoreSapText", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], AnalyticalCardSettings.prototype, "enableAddToInsights", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], AnalyticalCardSettings.prototype, "navigation", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], AnalyticalCardSettings.prototype, "valueSelectionInfo", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], AnalyticalCardSettings.prototype, "chartProperties", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], AnalyticalCardSettings.prototype, "colorPalette", void 0);
exports.AnalyticalCardSettings = AnalyticalCardSettings;
class AnalyticalCardSettingsv4 extends AnalyticalCardSettings {
}
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], AnalyticalCardSettingsv4.prototype, "measureAggregate", void 0);
exports.AnalyticalCardSettingsv4 = AnalyticalCardSettingsv4;
class AnalyticalCard {
}
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], AnalyticalCard.prototype, "model", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], AnalyticalCard.prototype, "template", void 0);
exports.AnalyticalCard = AnalyticalCard;
class StackCardSettings extends CommonCardSettings {
}
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], StackCardSettings.prototype, "itemText", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], StackCardSettings.prototype, "objectStreamCardsNavigationProperty", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], StackCardSettings.prototype, "objectStreamCardsSettings", void 0);
exports.StackCardSettings = StackCardSettings;
class StackCard {
}
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], StackCard.prototype, "model", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], StackCard.prototype, "template", void 0);
exports.StackCard = StackCard;
class LinkListCardSettings extends CommonCardSettings {
}
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], LinkListCardSettings.prototype, "listFlavor", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], LinkListCardSettings.prototype, "headerAnnotationPath", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], LinkListCardSettings.prototype, "staticContent", void 0);
exports.LinkListCardSettings = LinkListCardSettings;
class LinklistCard {
}
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], LinklistCard.prototype, "model", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], LinklistCard.prototype, "template", void 0);
exports.LinklistCard = LinklistCard;
class TableCardSettings extends CommonCardSettings {
}
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], TableCardSettings.prototype, "showLineItemDetail", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], TableCardSettings.prototype, "enableAddToInsights", void 0);
exports.TableCardSettings = TableCardSettings;
class TableCard {
}
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], TableCard.prototype, "model", void 0);
__decorate([
    (0, decorators_1.syncRule)({
        manifest: {
            path: (cardKeys) => (0, application_1.getCardSettingsPath)(cardKeys)
        }
    })
], TableCard.prototype, "template", void 0);
exports.TableCard = TableCard;
//# sourceMappingURL=Card.js.map